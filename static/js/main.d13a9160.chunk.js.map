{"version":3,"sources":["components/profile/profile.module.css","components/transactionHistory/TransactionHistory.module.css","components/friendList/FriendList.module.css","components/statistics/statistics.module.css","components/profile/profile.jsx","components/statistics/statistics.jsx","components/friendList/FriendListItem.jsx","components/friendList/FriendList.jsx","components/transactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","stat_list","map","id","percentage","item","style","backgroundColor","Math","random","toString","substr","FriendListItem","isOnline","status","width","FriendList","friends","friendList","friend","TransactionHistory","items","transaction_history","titleItem","titleItem_info","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d13a9160.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__FOwjt\",\"avatar\":\"profile_avatar__1jKK_\",\"name\":\"profile_name__3H8Dj\",\"tag\":\"profile_tag__1IhoK\",\"location\":\"profile_location__3HIs_\",\"stats\":\"profile_stats__28SKt\",\"label\":\"profile_label__4gVYX\",\"quantity\":\"profile_quantity__2_cQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__2VDz7\",\"title\":\"TransactionHistory_title__3e77U\",\"titleItem\":\"TransactionHistory_titleItem__13nuX\",\"titleItem_info\":\"TransactionHistory_titleItem_info__2VCLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendList_friends__2GVbv\",\"item\":\"FriendList_item__35ZZP\",\"status\":\"FriendList_status__2rjKl\",\"avatar\":\"FriendList_avatar__NCrO8\",\"name\":\"FriendList_name__3BmYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__kh-jp\",\"title\":\"statistics_title__2t_f4\",\"stat_list\":\"statistics_stat_list__1_s03\",\"item\":\"statistics_item__255Ee\",\"label\":\"statistics_label__sjR3W\",\"percentage\":\"statistics_percentage__1aR2N\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from './profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n    <div className={styles.profile}>\n        <div className={styles.description}>\n            \n            <img src={avatar} \n            alt={'Аватар пользователя'} \n            className={styles.avatar} />\n\n            <p className={styles.name}>{name}</p>\n            <p className={styles.tag}>@{tag}</p>\n            <p className={styles.location}>{location}</p>\n        </div>\n\n        <ul className={styles.stats}>\n            <li>\n                <span className={styles.label}>Followers</span>\n                <span className={styles.quantity}>{stats.followers}</span>\n            </li>\n            <li>\n                <span className={styles.label}>Views</span>\n                <span className={styles.quantity}>{stats.views}</span>\n            </li>\n            <li>\n                <span className={styles.label}>Likes</span>\n                <span className={styles.quantity}>{stats.likes}</span>\n            </li>\n        </ul>\n    </div>\n);\n\nProfile.propTypes ={\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.number.isRequired\n}\n\nexport default Profile;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from './statistics.module.css';\n\nconst randomColor = () => '#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6)\n\nconst Statistics  =({title, stats}) => (\n    <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n\n        <ul className={styles.stat_list}>\n        {stats.map(({id, label, percentage}) => (\n            <li \n                className={styles.item}\n                key = {id}\n                style = {{\n                backgroundColor: randomColor(),\n        }}\n        >\n            <span className={styles.label}>{label}</span>\n            <span className={styles.percentage}>{percentage}%</span>\n            </li>\n        ))}\n        </ul>\n    </section>\n);\n\nStatistics.propTypes = {\n\n    title: PropTypes.string,\n    stats: PropTypes.shape({\n        id: PropTypes.number,\n        label: PropTypes.string,\n        percentage: PropTypes.number,\n    }),\n};\n\nexport default Statistics;\n\n","\nimport React from 'react';\nimport styles from './FriendList.module.css'\n\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n    return (\n    <li className={styles.item}>\n        <span\n            className={styles.status}\n            style={\n            isOnline ? { backgroundColor: 'green' } : { backgroundColor: 'red' }\n        }\n        ></span>\n        <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\n        <p className={styles.name}>{name}</p>\n    </li>\n);\n};\nexport default FriendListItem;","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.css'\n\nconst FriendList = ({ friends }) => {\n    return (\n    <div className={styles.friends}>\n        <ul className={styles.friendList}>\n        {friends.map(friend => (\n            <FriendListItem\n            key={friend.id}\n            avatar={friend.avatar}\n            name={friend.name}\n            isOnline={friend.isOnline}\n        />\n        ))}\n        </ul>\n    </div>\n);\n};\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        avatar: PropTypes.string,\n        name: PropTypes.string.isRequired,\n        isOnline: PropTypes.bool.isRequired,\n    }),\n).isRequired,\n};\n\nexport default FriendList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n    <table className={styles.transaction_history}>\n        <thead>\n            <tr>\n                <th className={styles.title}>Type</th>\n                <th className={styles.title}>Amount</th>\n                <th className={styles.title}>Currency</th>\n            </tr>\n        </thead>\n        <tbody>\n            {items.map(item => (\n                <tr key={item.id} className={styles.titleItem}>\n                    <td className={styles.titleItem_info}>{item.type}</td>\n                    <td className={styles.titleItem_info}>{item.amount}</td>\n                    <td className={styles.titleItem_info}>{item.currency}</td>\n                </tr>\n            ))}\n        </tbody>\n    </table>\n);\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.string.isRequired,\n            currency: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n};\n\nexport default TransactionHistory;","import React from \"react\";\nimport Profile from './components/profile/profile';\nimport user from './components/profile/user.json';\n\nimport Statistics from './components/statistics/statistics';\nimport statisticalData from './components/statistics/statistical-data.json'\n\nimport FriendList from './components/friendList/FriendList';\nimport friends from './components/friendList/friends.json';\n\nimport TransactionHistory from './components/transactionHistory/TransactionHistory';\nimport transactions from './components/transactionHistory/transactions.json'\n\n\n\n\nfunction App() {\n  return (\n    <div>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats} />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      {/* <Statistics stats={statisticalData} /> */}\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n      </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}